
#
# ===============================
# = Basic
# ===============================
spring.application.name=bytedesk
# path
#server.servlet.context-path=/bytedesk
# 本地测试
server.port=8001

# ===============================
# = DATA SOURCE - mysql
# ===============================

# mysql 8
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/xiaper?serverTimezone=GMT%2B8&useUnicode=true&autoReconnect=true&characterEncoding=utf8&useSSL=true
# mysql 5.7
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/xiaper?autoReconnect=true&characterEncoding=utf8&useSSL=true
spring.datasource.username=root
spring.datasource.password=C8aJEVCCvSA1VFi8
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1


# ===============================
# = DATA SOURCE - oracle
# ===============================

#spring.datasource.url=jdbc:oracle:thin:@47.91.207.85:1521:xe
#spring.datasource.username=system
#spring.datasource.password=oracle
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1
#spring.datasource.max-active=20
#spring.datasource.max-idle=8
#spring.datasource.min-idle=8
#spring.datasource.initial-size=10

# ===============================
# = spring data : Multiple Spring Data modules found
# ===============================
spring.data.redis.repositories.enabled = false


# ===============================
# = JPA / HIBERNATE
# ===============================
#spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = update
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
# mysql 5.7
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#spring.jackson.serialization.indent_output=true
spring.jpa.open-in-view=true
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

# ===============================
# = Spring Session
# ===============================
# 存储方式
spring.session.store-type=Redis

# ===============================
# = REDIS (RedisProperties)
# = Redis数据库索引（默认为0）
# ===============================
# Spring Boot自带缓存
#spring.cache.type=Simple
# 禁用缓存
#spring.cache.type=None
# redis缓存
spring.cache.type=Redis
#
spring.redis.database=1
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=C8aJEVCCvSA1VFi8
# 连接池最大连接数（使用负值表示没有限制）
#spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
#spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
#spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
#spring.redis.timeout=0


#jedis连接池
###############################
#最大等待时间
spring.redis.jedis.pool.max-wait=1000ms
#最小空闲数量
spring.redis.jedis.pool.min-idle=1
#最大空闲数量
spring.redis.jedis.pool.max-idle=10
#最大连接数量
spring.redis.jedis.pool.max-active=1000

#
# ===============================
# = Rabbitmq
# ===============================

# 开发环境
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.username=bytedesk
spring.rabbitmq.password=C8aJEVCCvSA1VFi976
spring.rabbitmq.stomp.port=61613
spring.rabbitmq.stomp.login=stomp_web
spring.rabbitmq.stomp.passcode=stomp_web

#
# ===============================
# = ZooKeeper
# ===============================
zk.url=127.0.0.1:2181


## ===============================
## = Active MQ
## https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-activemq
## 这里对 ActiveMQ 的端口做一个简短说明，61616为消息代理接口 ，8161 为管理界面
## ===============================
## URL of the ActiveMQ broker. Auto-generated by default. For instance `tcp://localhost:61616`
## failover:(tcp://localhost:61616,tcp://localhost:61617)
#spring.activemq.broker-url=tcp://localhost:61617
##集群配置
##spring.activemq.broker-url=failover:(tcp://172.18.1.188:61616,tcp://172.18.1.18:61616)
#spring.activemq.user=admin
#spring.activemq.password=admin
##是否启用内存模式（也就是不安装MQ，项目启动时同时也启动一个MQ实例）
#spring.activemq.in-memory=false
## 如果此处设置为true，需要加如下的依赖包，否则会自动配置失败，报JmsMessagingTemplate注入失败
##是否替换默认的connectionFactory
#spring.activemq.pool.enabled=false
##最大连接数
##spring.activemq.pool.maxConnections=2
##超时时间
##spring.activemq.pool.expiryTimeout=0
##空闲时间
##spring.activemq.pool.idleTimeout=30000
##信任所有的包
##spring.activemq.packages.trust-all=true

# ===============================
# = JMS
# ===============================
# 配置消息模型为pub/sub方式, 如果为True，则是Topic；如果是false或者默认，则是queue。
#spring.jms.pub-sub-domain=true

# ===============================
# = Thymeleaf configurations
# ===============================
spring.thymeleaf.mode=HTML
spring.thymeleaf.cache=false


# ==============================================================
# = http
# ==============================================================
#logging.level.org.apache.http=DEBUG


# ===============================
# = Spring Batch
# ===============================
#spring.batch.initialize-schema=always


# ===============================
# = Swagger2 RESTFull API
# ===============================
swagger2.enable=true

#
# ===============================
# = Mail 通知服务 bytedesk@163.com
# https://blog.csdn.net/LDY1016/article/details/78365072
# ===============================
spring.mail.host=smtp.163.com
# 25端口被阿里云封，故使用465端口
#spring.mail.port=25
spring.mail.username=bytedesk@163.com
# 密码
#spring.mail.password=
# 授权码，网易邮箱需要用授权码登录
spring.mail.password=
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.default-encoding=UTF-8
#SSL证书Socket工厂
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
#使用SMTPS协议465端口
spring.mail.properties.mail.smtp.socketFactory.port=465
#显示在收件人邮箱里面的发件人名称
spring.mail.self.username=bytedesk@163.com


# ===============================
# 文件上传类型：
# 上传到本地：simple
# 上传到阿里云：aliyun
# ===============================
upload.type=aliyun

#
# ===============================
# = 阿里云OSS访问密钥: 需要替换为自己的
# ===============================
aliyun.access.key.id=您的osskeyid
aliyun.access.key.secret=您的osskeysecret
# 阿里云OSS服务相关配置
# OSS的endpoint,这里是华南地区(也就是深圳)
aliyun.oss.endpoint=https://oss-cn-shenzhen.aliyuncs.com
# 需要保留尾部的"/"
aliyun.oss.base.url=https://bytedesk.oss-cn-shenzhen.aliyuncs.com/
# 这是创建的bucket
aliyun.oss.bucket.name=bytedesk
# 这里已经把自己的域名映射到bucket地址了。需要设置域名绑定，设置域名CNAME（暂不使用）
aliyun.oss.img.domain=oss.bytedesk.com

#
# ===============================
# = 微信开放平台：第三方平台
# ===============================
wechat.open.componentAppId=
wechat.open.componentSecret=
wechat.open.componentToken=
wechat.open.componentAesKey=

#
# ===============================
# = Logging
# ===============================
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.com.xiaper=DEBUG
#logging.file=bytedesk.log
#logging.path=./logs


# ===============================
# = https://docs.spring.io/spring-security-oauth2-boot/docs/current-SNAPSHOT/reference/htmlsingle/
# ===============================
security.oauth2.resource.id=bytedesk
security.oauth2.resource.user-info-uri=http://localhost:8007/user
#security.oauth2.resource.token-info-uri=
security.oauth2.resource.prefer-token-info=false


# ===============================
# = spring-boot-starter-actuator
# ===============================
management.server.address=127.0.0.1
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.shutdown.enabled=true
management.httptrace.include=REQUEST_HEADERS,RESPONSE_HEADERS,PRINCIPAL,REMOTE_ADDRESS,SESSION_ID



#显示debug日志信息
#debug=true
spring.main.allow-bean-definition-overriding=true

#
# ===============================
# = xiaper auto configuration
# ===============================
#xiaper.version=2.1.2.alpha1

#
# ===============================
# = spring security
# ===============================
spring.security.user.name=user
spring.security.user.password=password

